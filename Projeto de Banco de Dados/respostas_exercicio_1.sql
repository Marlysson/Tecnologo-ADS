-- QUESTÃO 1 :Categorias que possuam preços entre R$ 100,00 e R$ 200,00.

SELECT * FROM CATEGORIA WHERE VALOR_DIA BETWEEN 100 AND 200

-- QUESTÃO 2: Categorias cujos nomes possuam a palavra ‘Luxo’.

SELECT * FROM CATEGORIA WHERE UPPER(NOME_CAT) LIKE '%LUXO%'
SELECT * FROM CATEGORIA WHERE NOME_CAT ILIKE '%LUXO%' -- NOT CASE SENSITIVE

-- QUESTAO 3 : Nomes de categorias de apartamentos que foram ocupados há mais de 5 anos.

SELECT * FROM HOSPEDAGEM
SELECT NOME_CAT,AGE(CURRENT_DATE,DT_SAIDA) FROM HOSPEDAGEM NATURAL JOIN CATEGORIA NATURAL JOIN APARTAMENTO WHERE AGE(CURRENT_DATE,DT_ENTRADA) > INTERVAL '5 YEARS'

-- QUESTÃO 4: Apartamentos que estão ocupados, ou seja, a data de saída está vazia.

SELECT NUM FROM HOSPEDAGEM WHERE DT_SAIDA IS NULL

-- QUESTÃO 5: Apartamentos cuja categoria tenha código 1, 2, 3, 11, 34, 54, 24, 12.

SELECT NUM FROM APARTAMENTO NATURAL JOIN CATEGORIA WHERE COD_CAT IN (1,2,3,11,34,54,24,12)

-- QUESTÃO 6: Apartamentos cujas categorias iniciam com a palavra ‘Luxo’.
SELECT NUM , NOME_CAT FROM APARTAMENTO NATURAL JOIN CATEGORIA WHERE UPPER(NOME_CAT) LIKE 'LUXO%'

-- SELECT NUM , NOME_CAT FROM APARTAMENTO , CATEGORIA WHERE APARTAMENTO.COD_CAT = CATEGORIA.COD_CAT
-- SELECT NUM, NOME_CAT FROM APARTAMENTO INNER JOIN CATEGORIA ON APARTAMENTO.COD_CAT = CATEGORIA.COD_CAT
-- 
-- SELECT NUM, NOME_CAT FROM APARTAMENTO INNER JOIN CATEGORIA USING(COD_CAT)

-- QUESTÃO 7 : Quantidade de apartamentos cadastrados no sistema.

SELECT COUNT(*) FROM APARTAMENTO

-- QUESTÃO 8: Somatório dos preços das categorias.

SELECT SUM(VALOR_DIA) FROM CATEGORIA

-- QUESTÃO 9: Média de preços das categorias.

SELECT AVG(VALOR_DIA) FROM CATEGORIA

-- QUESTÃO 10: Maior preço de categoria.

SELECT MAX(VALOR_DIA) FROM CATEGORIA

-- QUESTÃO 11: Menor preço de categoria.

SELECT MIN(VALOR_DIA) FROM CATEGORIA

-- QUESTÃO 12: O preço média das diárias dos apartamentos ocupados por cada hóspede.

-- SELECT NOME, AVG(VALOR_DIA) FROM HOSPEDAGEM H
--     INNER JOIN HOSPEDE HOSP ON H.COD_HOSP = HOSP.COD_HOSP
--     INNER JOIN APARTAMENTO APART ON H.NUM = APART.NUM
--     INNER JOIN CATEGORIA CAT ON APART.COD_CAT = CAT.COD_CAT
--     GROUP BY NOME

SELECT NOME , AVG(VALOR_DIA) FROM HOSPEDAGEM 
	NATURAL JOIN HOSPEDE
	NATURAL JOIN APARTAMENTO
	NATURAL JOIN CATEGORIA 
	GROUP BY NOME

-- QUESTÃO 13: Quantidade de apartamentos para cada categoria.

SELECT NOME_CAT , COUNT(*) FROM CATEGORIA NATURAL JOIN APARTAMENTO GROUP BY NOME_CAT ORDER BY COUNT(*) DESC

-- QUESTÃO 14: Categorias que possuem pelo menos 2 apartamentos.

SELECT NOME_CAT , COUNT(*) FROM CATEGORIA NATURAL JOIN APARTAMENTO GROUP BY NOME_CAT  HAVING COUNT(*) > 2

-- QUESTÃO 15: Nome dos hóspedes que nasceram após 1° de janeiro de 1970.

SELECT NOME FROM HOSPEDE WHERE DT_NASC > '1970-01-01'

-- QUESTÃO 16: Quantidade de hóspedes.

SELECT COUNT(*) FROM HOSPEDAGEM

-- QUESTÃO 17: Apartamentos que foram ocupados pelo menos 2 vezes.

SELECT NUM FROM HOSPEDE NATURAL JOIN HOSPEDAGEM GROUP BY NUM HAVING COUNT(*) >= 2

-- QUESTÃO 18: Altere a tabela Hóspede, acrescentando o campo "Nacionalidade".

ALTER TABLE HOSPEDE ADD COLUMN NACIONALIDADE VARCHAR NOT NULL DEFAULT 'NÃO INFORMADO'

-- QUESTÃO 19: Quantidade de hóspedes para cada nacionalidade.

SELECT NACIONALIDADE, COUNT(*) FROM HOSPEDE GROUP BY NACIONALIDADE

-- QUESTÃO 20: A data de nascimento do hóspede mais velho

SELECT DT_NASC FROM HOSPEDE WHERE DT_NASC = (SELECT MIN(DT_NASC) FROM HOSPEDE)

-- QUESTÃO 21: A data de nascimento do hóspede mais novo.

SELECT DT_NASC FROM HOSPEDE WHERE DT_NASC = (SELECT MAX(DT_NASC) FROM HOSPEDE)

-- QUESTÃO 22 : Reajuste em 10% o valor das diárias das categorias.

UPDATE CATEGORIA SET VALOR_DIA = VALOR_DIA * 1.1

-- QUESTÃO 23: O nome das categorias que não possuem apartamentos.

SELECT NOME_CAT,VALOR_DIA FROM CATEGORIA LEFT OUTER JOIN APARTAMENTO 
	ON APARTAMENTO.COD_CAT = CATEGORIA.COD_CAT 
	WHERE APARTAMENTO.COD_CAT IS NULL

-- QUESTÃO 24: O número dos apartamentos que nunca foram ocupados.

SELECT * FROM APARTAMENTO WHERE NUM NOT IN (SELECT NUM FROM HOSPEDAGEM)

-- QUESTÃO 25: O número do apartamento mais caro ocupado pelo João.

SELECT MAX(VALOR_DIA) FROM CATEGORIA NATURAL JOIN APARTAMENTO
	WHERE NUM IN 
	(SELECT NUM FROM HOSPEDAGEM 
		NATURAL JOIN HOSPEDE 
		NATURAL JOIN CATEGORIA 
		NATURAL JOIN APARTAMENTO 
			WHERE UPPER(NOME) LIKE '%MARIA'
	)

-- QUESTÃO 26: O nome dos hóspedes que nunca se hospedaram no apartamento 201.

SELECT NOME FROM HOSPEDE NATURAL JOIN HOSPEDAGEM WHERE NUM <> 201

-- QUESTÃO 27: O nome dos hóspedes que nunca se hospedaram em apartamentos da categoria LUXO.

SELECT NOME, NOME_CAT FROM HOSPEDE 
	NATURAL JOIN HOSPEDAGEM 
	NATURAL JOIN CATEGORIA 
	NATURAL JOIN APARTAMENTO
		WHERE UPPER(NOME_CAT) NOT LIKE 'LUXO'

-- QUESTÃO 28: O nome dos hóspedes que se hospedaram ou reservaram apartamento do tipo LUXO.

SELECT NOME FROM HOSPEDE NATURAL JOIN HOSPEDAGEM
	NATURAL JOIN APARTAMENTO
	NATURAL JOIN CATEGORIA
		WHERE NOME_CAT LIKE 'LUXO'
UNION
SELECT NOME FROM HOSPEDE NATURAL JOIN RESERVA
	NATURAL JOIN APARTAMENTO
	NATURAL JOIN CATEGORIA
		WHERE NOME_CAT LIKE 'LUXO'

-- QUESTÃO 29: O nome dos hóspedes que se hospedaram mas nunca reservaram apartamentos do tipo
LUXO.

SELECT NOME FROM HOSPEDE NATURAL JOIN HOSPEDAGEM
	NATURAL JOIN APARTAMENTO
	NATURAL JOIN CATEGORIA
		WHERE NOME_CAT LIKE 'LUXO'
EXCEPT
SELECT NOME FROM HOSPEDE NATURAL JOIN RESERVA
	NATURAL JOIN APARTAMENTO
	NATURAL JOIN CATEGORIA
		WHERE NOME_CAT LIKE 'LUXO'

    
-- QUESTÃO 30: O nome dos hóspedes que se hospedaram e reservaram apartamento do tipo LUXO.

-- USANDO NATURAL JOIN + SUBQUERY

SELECT DISTINCT NOME FROM HOSPEDE
	NATURAL JOIN HOSPEDAGEM
	NATURAL JOIN APARTAMENTO
	NATURAL JOIN CATEGORIA
	WHERE UPPER(NOME_CAT) LIKE 'EXECUTIVO' AND COD_HOSP IN
	(SELECT COD_HOSP FROM HOSPEDE
			NATURAL JOIN RESERVA
			NATURAL JOIN CATEGORIA
			WHERE UPPER(NOME_CAT) LIKE 'EXECUTIVO')

-- USANDO CONJUNTOS COM NATURAL JOIN

SELECT NOME FROM HOSPEDE WHERE COD_HOSP IN
(SELECT COD_HOSP FROM HOSPEDE
	NATURAL JOIN HOSPEDAGEM
	NATURAL JOIN APARTAMENTO
	NATURAL JOIN CATEGORIA
	WHERE UPPER(NOME_CAT) LIKE 'EXECUTIVO'
INTERSECT
SELECT COD_HOSP FROM HOSPEDE
	NATURAL JOIN RESERVA
	NATURAL JOIN CATEGORIA
	WHERE UPPER(NOME_CAT) LIKE 'EXECUTIVO')